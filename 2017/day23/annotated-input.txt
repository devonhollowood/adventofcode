set b 67
set c b
jnz a 2 # if a != 0: goto 'b
jnz 1 5 # if a == 0: goto 'a

# 'b: run this if a != 0
mul b 100
sub b -100000
set c b
sub c -17000

# 'a: this seems like the main loop.
# if a == 0, start with b = 67 c = 67
# if a != 0, start with b = 106700 c = 123700

# on every loop, b is incremented by 17. exits after loop when b == c

# this part loops over all d in [2, b) and within that all e in [2, b),
# and increments h if it's ever the case that d * e == b. {

# f = 1, d = 2
set f 1
set d 2

    # 'c
    # this part loops over all e in [2, b), and marks f as 0 if ever d * e == b {

    # e = 2
    set e 2

        # 'd

        # effectively: if d * e != b { f = 0 }
        set g d
        mul g e
        sub g b
        jnz g 2
        set f 0

        # e += 1
        sub e -1

        # effectively: if e != b { goto 'd }
        set g e
        sub g b
        jnz g -8

    # }

    # d += 1
    sub d -1

    # effectively: if d != b { goto 'c }
    set g d
    sub g b
    jnz g -13 # goto 'c


# if f != 0 { h += 1 }
# this triggers if d * e was ever equal to b in the loop
jnz f 2
sub h -1

# }

# effectively: if b == c { exit } else { b += 17; goto 'a }
set g b
sub g c
jnz g 2
jnz 1 3 # exit program
sub b -17
jnz 1 -23 # goto 'a
